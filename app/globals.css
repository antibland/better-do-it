@import "tailwindcss";

/* Modern HSL/OKLCH Color System */
/* Using HSL as fallback with OKLCH for modern browsers - provides better perceptual uniformity */

/* Define semantic color variables for LIGHT mode (default) */
:root {
  /* Typography - Satoshi font family */
  --font-sans:
    var(--font-satoshi), ui-sans-serif, system-ui, sans-serif,
    "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  --font-display: var(--font-satoshi), ui-sans-serif, system-ui, sans-serif;

  /* Base color palette - OKLCH for better perceptual uniformity */
  --bg-dark: oklch(0.97 0.005 0); /* Very light gray */
  --bg: oklch(1 0 0); /* Pure white */
  --bg-light: oklch(1 0 0); /* Pure white */
  --text: oklch(0.15 0.005 0); /* Very dark gray */
  --text-muted: oklch(0.45 0.005 0); /* Medium gray */
  --highlight: oklch(0.99 0.005 0); /* Off-white highlight */
  --border: oklch(0.85 0.005 0); /* Light gray border */
  --border-muted: oklch(0.92 0.005 0); /* Very light border */
  --primary: oklch(0.7 0.15 184); /* Vibrant teal */
  --secondary: oklch(0.7 0.15 4); /* Vibrant coral */
  --danger: oklch(0.65 0.15 30); /* Red */
  --warning: oklch(0.75 0.15 100); /* Amber */
  --success: oklch(0.65 0.15 160); /* Green */
  --info: oklch(0.7 0.15 260); /* Blue */

  /* Semantic color mappings for component system */
  --background: var(--bg);
  --foreground: var(--text);
  --card: var(--bg-light);
  --card-foreground: var(--text);
  --popover: var(--bg-light);
  --popover-foreground: var(--text);
  --primary-foreground: var(--bg-light);
  --secondary-foreground: var(--bg-light);
  --muted: var(--bg-light);
  --muted-foreground: var(--text-muted);
  --accent: var(--highlight);
  --accent-foreground: var(--text);
  --destructive: var(--danger);
  --destructive-foreground: var(--text);
  --input: var(--bg-light);
  --ring: var(--primary);
  --radius: 0.5rem;
}

/* Define semantic color variables for DARK mode */
body.dark,
.dark {
  /* Base color palette - OKLCH for better perceptual uniformity */
  --bg-dark: oklch(0.05 0.005 0); /* Very dark gray */
  --bg: oklch(0.08 0.005 0); /* Dark gray */
  --bg-light: oklch(0.12 0.005 0); /* Slightly lighter dark gray */
  --text: oklch(0.95 0.005 0); /* Very light gray */
  --text-muted: oklch(0.65 0.005 0); /* Medium light gray */
  --highlight: oklch(0.2 0.005 0); /* Dark highlight */
  --border: oklch(0.25 0.005 0); /* Dark border */
  --border-muted: oklch(0.18 0.005 0); /* Darker border */
  --primary: oklch(0.75 0.15 184); /* Bright teal */
  --secondary: oklch(0.8 0.15 4); /* Bright coral */
  --danger: oklch(0.75 0.15 30); /* Bright red */
  --warning: oklch(0.8 0.15 100); /* Bright amber */
  --success: oklch(0.75 0.15 160); /* Bright green */
  --info: oklch(0.8 0.15 260); /* Bright blue */

  /* Semantic color mappings remain the same - they reference the base palette */
  --primary-foreground: var(--bg-dark);
  --secondary-foreground: var(--bg-dark);
}

/* Auto dark mode via system preference - applies dark colors when system is set to dark */
@media (prefers-color-scheme: dark) {
  :root:not(.light) {
    /* OKLCH colors for better perceptual uniformity */
    --bg-dark: oklch(0.05 0.005 0); /* Very dark gray */
    --bg: oklch(0.08 0.005 0); /* Dark gray */
    --bg-light: oklch(0.12 0.005 0); /* Slightly lighter dark gray */
    --text: oklch(0.95 0.005 0); /* Very light gray */
    --text-muted: oklch(0.65 0.005 0); /* Medium light gray */
    --highlight: oklch(0.2 0.005 0); /* Dark highlight */
    --border: oklch(0.25 0.005 0); /* Dark border */
    --border-muted: oklch(0.18 0.005 0); /* Darker border */
    --primary: oklch(0.75 0.15 184); /* Bright teal */
    --secondary: oklch(0.8 0.15 4); /* Bright coral */
    --danger: oklch(0.75 0.15 30); /* Bright red */
    --warning: oklch(0.8 0.15 100); /* Bright amber */
    --success: oklch(0.75 0.15 160); /* Bright green */
    --info: oklch(0.8 0.15 260); /* Bright blue */
  }
}

/* Tailwind CSS 4 @theme directive for utility class generation */
@theme inline {
  /* Semantic colors - these will generate utility classes like bg-primary, text-secondary, etc. */
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --color-card: var(--card);
  --color-card-foreground: var(--card-foreground);
  --color-popover: var(--popover);
  --color-popover-foreground: var(--popover-foreground);
  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);
  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);
  --color-accent: var(--accent);
  --color-accent-foreground: var(--accent-foreground);
  --color-destructive: var(--destructive);
  --color-destructive-foreground: var(--destructive-foreground);
  --color-border: var(--border);
  --color-input: var(--input);
  --color-ring: var(--ring);

  /* Base color palette - accessible via utility classes like bg-bg, text-text-muted, etc. */
  --color-bg-dark: var(--bg-dark);
  --color-bg: var(--bg);
  --color-bg-light: var(--bg-light);
  --color-text: var(--text);
  --color-text-muted: var(--text-muted);
  --color-highlight: var(--highlight);
  --color-border-muted: var(--border-muted);

  /* State colors - accessible via utility classes like bg-success, text-warning, etc. */
  --color-success: var(--success);
  --color-warning: var(--warning);
  --color-danger: var(--danger);
  --color-info: var(--info);

  /* Task age colors - semantic colors for task urgency */
  --color-fresh: var(--success); /* maps to success color */
  --color-aging: var(--warning); /* maps to warning color */
  --color-stale: var(--danger); /* maps to danger color */

  /* Typography - Satoshi font family */
  --font-mono:
    ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
    "Courier New", monospace;
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family:
    var(--font-satoshi), ui-sans-serif, system-ui, sans-serif,
    "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  font-feature-settings:
    "kern" 1,
    "liga" 1,
    "calt" 1; /* Enable font features for better typography */
}

button {
  cursor: pointer;
}

/* Mobile input text readability improvements */
input[type="text"],
input[type="email"],
input[type="password"] {
  /* Ensure consistent text rendering across mobile browsers */
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  /* Prevent iOS zoom on input focus */
  font-size: 16px !important;
  /* Improve text contrast and readability */
  color: var(--foreground) !important;
  background-color: var(--background) !important;
  border-color: var(--border) !important;
}

/* Ensure placeholder text is visible on mobile */
input::placeholder {
  color: var(--muted-foreground) !important;
  opacity: 1; /* Firefox requires this */
}

/* Improve focus states for mobile */
input:focus {
  outline: none;
  border-color: var(--ring) !important;
  box-shadow: 0 0 0 2px color-mix(in srgb, var(--primary) 20%, transparent) !important;
}

/* ContentEditable dark mode fixes */
[contenteditable] {
  background-color: transparent !important;
}

[contenteditable]:focus {
  outline: none;
  background-color: transparent !important;
}

/* Skeleton loading state styles - uses new color system for consistency */
.react-loading-skeleton,
.react-loading-skeleton::after,
.react-loading-skeleton::before,
[class*="react-loading-skeleton"] {
  background-color: var(--bg-light) !important;
  background-image: linear-gradient(
    90deg,
    var(--bg-light) 0px,
    var(--highlight) 40px,
    var(--bg-light) 80px
  ) !important;
}

.react-loading-skeleton::after,
[class*="react-loading-skeleton"]::after {
  background-image: linear-gradient(
    90deg,
    transparent,
    var(--highlight),
    transparent
  ) !important;
  opacity: 0.3;
}

/* Light mode skeleton adjustments */
body.light .react-loading-skeleton,
.light .react-loading-skeleton,
body.light .react-loading-skeleton::after,
.light .react-loading-skeleton::after,
body.light .react-loading-skeleton::before,
.light .react-loading-skeleton::before,
body.light [class*="react-loading-skeleton"],
.light [class*="react-loading-skeleton"] {
  background-color: var(--bg-dark) !important;
  background-image: linear-gradient(
    90deg,
    var(--bg-dark) 0px,
    var(--border) 40px,
    var(--bg-dark) 80px
  ) !important;
}

/* Typography utility classes for Satoshi variants */
.font-display {
  font-family: var(--font-display);
  font-feature-settings:
    "kern" 1,
    "liga" 1,
    "calt" 1;
}

/* Heading styles with Satoshi Display */
h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: var(--font-satoshi), ui-sans-serif, system-ui, sans-serif;
  font-feature-settings:
    "kern" 1,
    "liga" 1,
    "calt" 1;
  font-weight: 500; /* Medium weight for better readability */
}

/* iOS Safari specific fixes */
@supports (-webkit-touch-callout: none) {
  /* iOS Safari specific styles */
  body {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  /* Ensure proper touch handling */
  button,
  input,
  select,
  textarea {
    -webkit-tap-highlight-color: transparent;
  }

  /* Fix for iOS Safari viewport issues */
  html {
    -webkit-text-size-adjust: 100%;
  }
}

/* Email Preview Styles */
.email-preview {
  /* Ensure proper email rendering */
  font-family: Arial, Helvetica, sans-serif;
  line-height: 1.6;
  color: var(--foreground);
  background-color: var(--background);
}

.email-preview img {
  max-width: 100%;
  height: auto;
}

.email-preview table {
  border-collapse: collapse;
  width: 100%;
}

.email-preview td,
.email-preview th {
  padding: 8px;
  border: 1px solid var(--border);
}

.email-preview button {
  display: inline-block;
  padding: 12px 24px;
  background-color: var(--primary);
  color: var(--primary-foreground);
  text-decoration: none;
  border-radius: 6px;
  font-weight: 500;
  border: none;
  cursor: pointer;
}

.email-preview button:hover {
  background-color: color-mix(
    in srgb,
    var(--primary) 80%,
    black
  ); /* Slightly darker primary for hover state */
}

/* Radix UI Accordion Animations */
.AccordionContent {
  overflow: hidden;
}

.AccordionContent[data-state="open"] {
  animation: slideDown 300ms ease-out;
}

.AccordionContent[data-state="closed"] {
  animation: slideUp 300ms ease-out;
}

@keyframes slideDown {
  from {
    height: 0;
  }
  to {
    height: var(--radix-accordion-content-height);
  }
}

@keyframes slideUp {
  from {
    height: var(--radix-accordion-content-height);
  }
  to {
    height: 0;
  }
}
